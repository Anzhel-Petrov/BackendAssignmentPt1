@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@using  BackendAssignmentPt1.Models
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link href="/StyleSheet.css" rel="stylesheet" />
    <title>Books Catalogue</title>
</head>
<body>
    <div class="container">
        <h2>The Books</h2>
        <a asp-controller="Home" asp-action="Index">Home</a>
        <div class="flex-container">
            @foreach (Book book in ViewBag.Books)
            {
                <div class="flex-item">
                    <strong>Title: </strong> @book.Title<br />
                    <strong>Author: </strong> @book.Author<br>
                    <strong>Price: </strong>@String.Format("{0:0.00}", book.Price)<br>
                    <strong>Publisher: </strong> @book.Publisher (@book.Published)<br>
                    <strong>ISBN: </strong>@book.ISBN<br /><br />
                    <img margin="100" src="/Images/@book.ImageFileName" alt="@book.Title" />
                </div>
            }

            @*
        If we store the entire Product list in a ViewBag property we need to cast the product iteration to a book object. Why? Because Book is a Product - it inherits from it.
        But Product is not necessarily a Book so the Product cannot access the properties of a Book - the product iteration below cannot be used to access the properties of a book object.
            *@
            @*@foreach (Product product in ViewBag.Products)
        {
            if (product is Book)
            {
                Book book = (Book)product;
                <div class="text">
                    <strong>Title: </strong> @book.Title<br />
                    <strong>Author: </strong> @book.Author<br>
                    <strong>Price: </strong>@String.Format("{0:0.00}", book.Price)<br>
                    <strong>Publisher: </strong> @book.Publisher (@book.Published)<br>
                    <strong>ISBN: </strong>@book.ISBN<br /><br />
                    <img margin="100" src="/Images/@book.ImageFileName" alt="@book.Title" />
                </div>
            }
        }*@
        </div>
    </div>
</body>
</html>